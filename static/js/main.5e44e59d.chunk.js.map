{"version":3,"sources":["context/main/reducer.js","context/main/index.js","pages/home/index.js","widgets/dropzone/index.js","widgets/table/index.js","pages/upload/index.js","widgets/chart/index.js","pages/magic/index.js","pages/about/index.js","components/navigation/index.js","components/bar/index.js","app.js","serviceWorker.js","index.js"],"names":["initialState","file","reducer","state","action","type","payload","MainContext","React","createContext","MainContextProvider","children","useReducer","value","dispatch","Provider","Consumer","useStyles","makeStyles","theme","root","padding","paper","Home","useContext","Grid","item","xs","Typography","gutterBottom","to","DropZone","props","onDrop","a","reader","FileReader","onload","e","contents","target","result","console","log","readAsText","useDropzone","getRootProps","getInputProps","Paper","className","variant","elevation","Box","p","align","color","path","name","table","minWidth","createData","calories","fat","carbs","protein","rows","DenseTable","classes","TableContainer","component","Table","size","aria-label","TableHead","TableRow","TableCell","TableBody","map","row","key","scope","Upload","history","useHistory","Fragment","Grow","in","mt","container","direction","justify","alignItems","Button","onClick","push","disabled","Skeleton","animation","height","option","xAxis","data","yAxis","series","events","opts","Chart","notMerge","lazyUpdate","onChartReady","onEvents","Magic","About","TAB_VALUES","withRouter","location","selectedTab","indexOf","pathname","Tabs","onChange","event","newValue","indicatorColor","textColor","Tab","icon","label","flexGrow","menuButton","marginRight","spacing","title","MenuAppBar","useState","auth","anchorEl","setAnchorEl","open","Boolean","handleClose","AppBar","position","Toolbar","IconButton","aria-controls","aria-haspopup","currentTarget","Menu","id","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","onClose","MenuItem","createBrowserHistory","paddingTop","createMuiTheme","palette","primary","main","App","basename","Container","maxWidth","square","exact","AppContainer","ThemeProvider","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.5e44e59d.chunk.js","sourcesContent":["export const initialState = {\n  file: {},\n};\n\nexport const reducer = (state, action) => {\n  switch (action.type) {\n    case 'UPLOAD_FILE':\n      return {\n        ...state,\n        file: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n","import React, { useReducer } from 'react';\nimport { initialState, reducer } from './reducer';\n\nconst MainContext = React.createContext();\n\nfunction MainContextProvider({ children }) {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const value = { state, dispatch };\n\n  return (\n    <MainContext.Provider value={value}>\n      {children}\n    </MainContext.Provider>\n  );\n}\n\nconst MainContextConsumer = MainContext.Consumer;\n\nexport { MainContext, MainContextProvider, MainContextConsumer };","import React, { useContext } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Link } from 'react-router-dom';\nimport { MainContext } from '../../context/main';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: '1em'\n  },\n  paper: {}\n}));\n\nfunction Home() {\n  const { state, dispatch } = useContext(MainContext);\n  const classes = useStyles();\n\n  return (\n    <Grid item xs={12}>\n      <Typography gutterBottom>\n        <Link to=\"/upload\">Get Started</Link>\n      </Typography>\n    </Grid>\n  );\n}\n\nexport default Home;","import React, { useContext } from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport { MainContext } from '../../context/main';\n\nfunction DropZone(props) {\n  const { state, dispatch } = useContext(MainContext);\n  const onDrop = async ([file]) => {\n    const reader = new FileReader();\n    reader.onload = function(e) {\n      const contents = e.target.result;\n      console.log(contents);\n    };\n    reader.readAsText(file);\n    dispatch({ type: 'UPLOAD_FILE', payload: file });\n  }\n\n  const { getRootProps, getInputProps } = useDropzone({ onDrop });\n\n  return (\n    <Paper {...getRootProps({className: 'dropzone'})} variant=\"outlined\" elevation={0}>\n      <input {...getInputProps()} />\n      <Box p={4}>\n        <Typography align=\"center\" color=\"textSecondary\">\n          {state.file.path ? state.file.name : \"Drag 'n' drop a file here, or click to select a file.\"}\n        </Typography>\n      </Box>\n    </Paper>\n  );\n}\n\nexport default DropZone;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n});\n\nfunction createData(name, calories, fat, carbs, protein) {\n  return { name, calories, fat, carbs, protein };\n}\n\nconst rows = [\n  createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\n  createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\n  createData('Eclair', 262, 16.0, 24, 6.0),\n  createData('Cupcake', 305, 3.7, 67, 4.3),\n  createData('Gingerbread', 356, 16.0, 49, 3.9),\n];\n\nexport default function DenseTable() {\n  const classes = useStyles();\n\n  return (\n    <TableContainer component={Paper}>\n      <Table className={classes.table} size=\"small\" aria-label=\"a dense table\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Dessert (100g serving)</TableCell>\n            <TableCell align=\"right\">Calories</TableCell>\n            <TableCell align=\"right\">Fat&nbsp;(g)</TableCell>\n            <TableCell align=\"right\">Carbs&nbsp;(g)</TableCell>\n            <TableCell align=\"right\">Protein&nbsp;(g)</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {rows.map(row => (\n            <TableRow key={row.name}>\n              <TableCell component=\"th\" scope=\"row\">\n                {row.name}\n              </TableCell>\n              <TableCell align=\"right\">{row.calories}</TableCell>\n              <TableCell align=\"right\">{row.fat}</TableCell>\n              <TableCell align=\"right\">{row.carbs}</TableCell>\n              <TableCell align=\"right\">{row.protein}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}","import React, { useContext } from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport DropZone from '../../widgets/dropzone';\nimport DenseTable from '../../widgets/table';\nimport Box from '@material-ui/core/Box';\nimport Grow from '@material-ui/core/Grow';\nimport { MainContext } from '../../context/main';\nimport Button from '@material-ui/core/Button';\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport Grid from '@material-ui/core/Grid';\nimport { useHistory } from 'react-router-dom';\n\nfunction Upload() {\n  const { state } = useContext(MainContext);\n  const history = useHistory();\n\n  const handleClickAnalyze = () => {\n    history.push(\"/magic\");\n  }\n\n  return (\n    <React.Fragment>\n      <Typography gutterBottom>\n        {/*Upload Section*/}\n      </Typography>\n      <DropZone />\n      {state.file.path ? (\n        <React.Fragment>\n          <Grow in={state.file.path}>\n            <Box mt={2}>\n              <DenseTable />\n            </Box>\n          </Grow>\n          <Grid\n            container\n            direction=\"row\"\n            justify=\"center\"\n            alignItems=\"center\"\n          >\n            <Box mt={2}>\n              <Button onClick={handleClickAnalyze} variant=\"outlined\" color=\"primary\" disabled={!state.file.path}>\n                Analyze\n              </Button>\n            </Box>\n          </Grid>\n        </React.Fragment>\n      ) : (\n        <React.Fragment>\n          <Skeleton animation=\"pulse\" height={50} />\n        </React.Fragment>\n      )}\n    </React.Fragment>\n  );\n}\n\nexport default Upload;\n","import React from 'react';\nimport ReactEcharts from 'echarts-for-react';\n\nconst option = {\n  xAxis: {\n    type: 'category',\n    data: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun']\n  },\n  yAxis: {\n    type: 'value'\n  },\n  series: [\n    {\n      data: [820, 932, 901, 934, 1290, 1330, 1320],\n      type: 'line'\n    },\n    {\n      data: [824, 232, 601, 134, 1390, 730, 1320],\n      type: 'line'\n    },\n  ]\n}\n\nconst events = {}\nconst opts = {}\n\nfunction Chart() {\n  const onChartReady = () => {\n    console.log('chart ready...');\n  }\n\n  return (\n    <ReactEcharts\n      option={option}\n      notMerge={true}\n      lazyUpdate={true}\n      theme={\"default\"}\n      onChartReady={onChartReady}\n      onEvents={events}\n      opts={opts}\n    />\n  );\n}\n\nexport default Chart;\n","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Chart from '../../widgets/chart';\n\nfunction Magic() {\n  return (\n    <React.Fragment>\n      <Typography gutterBottom>\n        {/*Magic Section Content*/}\n      </Typography>\n      <Chart />\n    </React.Fragment>\n  );\n}\n\nexport default Magic;\n","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\n\nfunction About() {\n  return (\n    <Typography gutterBottom>\n      {/*About Us Section*/}\n    </Typography>\n  );\n}\n\nexport default About;\n","import React, { useContext } from 'react';\nimport { withRouter, useHistory } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport TimelineIcon from '@material-ui/icons/Timeline';\nimport InfoIcon from '@material-ui/icons/Info';\nimport { MainContext } from '../../context/main';\n\nconst TAB_VALUES = [\n  '/upload',\n  '/magic',\n  '/about'\n];\n\nconst Navigation = ({ location }) => {\n  const history = useHistory();\n  const selectedTab = TAB_VALUES.indexOf(location.pathname);\n  const { state } = useContext(MainContext);\n\n  const handleChange = (event, newValue) => {\n    history.push(TAB_VALUES[newValue]);\n  };\n\n  if (location.pathname !== '/') {\n    return (\n      <Tabs\n        value={selectedTab}\n        onChange={handleChange}\n        variant=\"fullWidth\"\n        indicatorColor=\"primary\"\n        textColor=\"primary\"\n      >\n        <Tab icon={<CloudUploadIcon />} label=\"Upload\" />\n        <Tab icon={<TimelineIcon />} label=\"Magic\" disabled={!state.file.path} />\n        <Tab icon={<InfoIcon />} label=\"Why Us?\" disabled={!state.file.path} />\n      </Tabs>\n    );\n  }\n  return '';\n}\n\nexport default withRouter(Navigation);\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n}));\n\nexport default function MenuAppBar() {\n  const classes = useStyles();\n  const [auth, setAuth] = React.useState(true);\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const open = Boolean(anchorEl);\n\n  const handleMenu = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Typography variant=\"h6\" className={classes.title}>\n            Weather-stellar\n          </Typography>\n          {auth && (\n            <div>\n              <IconButton\n                aria-label=\"account of current user\"\n                aria-controls=\"menu-appbar\"\n                aria-haspopup=\"true\"\n                onClick={handleMenu}\n                color=\"inherit\"\n              >\n                <AccountCircle />\n              </IconButton>\n              <Menu\n                id=\"menu-appbar\"\n                anchorEl={anchorEl}\n                anchorOrigin={{\n                  vertical: 'top',\n                  horizontal: 'right',\n                }}\n                keepMounted\n                transformOrigin={{\n                  vertical: 'top',\n                  horizontal: 'right',\n                }}\n                open={open}\n                onClose={handleClose}\n              >\n                <MenuItem onClick={handleClose}>Profile</MenuItem>\n                <MenuItem onClick={handleClose}>My account</MenuItem>\n              </Menu>\n            </div>\n          )}\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}","import 'typeface-roboto';\nimport './app.css';\nimport React from 'react';\nimport { HashRouter, Route } from \"react-router-dom\";\nimport { createBrowserHistory } from 'history';\nimport Home from './pages/home';\nimport Upload from './pages/upload';\nimport Magic from './pages/magic';\nimport About from './pages/about';\nimport { MainContextProvider } from \"./context/main\";\nimport Navigation from './components/navigation';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Container from '@material-ui/core/Container';\nimport { makeStyles, createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport Bar from './components/bar';\n\nconst history = createBrowserHistory();\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    paddingTop: '2em'\n  },\n  paper: {\n    padding: '1em',\n    height: \"100%\"\n  },\n}));\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#2c3e50',\n    }\n  },\n})\n\nfunction AppContainer() {\n  return (\n    <MainContextProvider>\n      <ThemeProvider theme={theme}>\n        <App/>\n      </ThemeProvider>\n    </MainContextProvider>\n  );\n}\n\nfunction App() {\n  const classes = useStyles();\n\n  return (\n    <HashRouter basename=\"/\" history={history}>\n      <Container className={classes.root} maxWidth=\"lg\">\n        <Grid item xs={12}>\n          <Bar/>\n          <Paper className={classes.paper} square elevation={0}>\n            <Navigation/>\n            <Box mt={2}>\n              <Route exact path=\"/\" component={Home} />\n              <Route exact path=\"/upload\" component={Upload} />\n              <Route exact path=\"/magic\" component={Magic} />\n              <Route exact path=\"/about\" component={About} />\n            </Box>\n          </Paper>\n        </Grid>\n      </Container>\n    </HashRouter>\n  );\n}\n\nexport default AppContainer;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport AppContainer from './app';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<AppContainer />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}