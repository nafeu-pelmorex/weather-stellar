{"version":3,"sources":["pages/home/index.js","data/index.js","context/main/reducer.js","context/main/index.js","widgets/dropzone/index.js","widgets/table/index.js","pages/upload/index.js","widgets/chart/index.js","widgets/options/index.js","pages/magic/index.js","pages/export/index.js","components/navigation/index.js","components/bar/index.js","app.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","root","padding","paper","Home","classes","history","useHistory","Grid","item","xs","align","Box","p","Typography","variant","gutterBottom","pb","Button","color","size","className","button","onClick","push","getDataByLocation","data","location","_","filter","name","getFilteredPerformanceData","includes","ts","DataService","electricity","getLocationOptions","map","electricityData","value","label","startCase","toLower","getPredictionData","weatherVariable","prediction","dates","series","type","v1","v2","v3","legend","subtext","title","analysis","getPerformanceData","filteredPerformanceData","performance","restaurant","restaurantData","pageviews","pageviewsData","initialState","file","locationOptions","industry","reducer","state","action","getIndustryByFilename","payload","console","log","MainContext","React","createContext","MainContextProvider","children","useReducer","dispatch","Provider","Consumer","DropZone","props","useContext","onDrop","a","reader","FileReader","onload","e","contents","target","result","readAsText","useDropzone","getRootProps","getInputProps","Paper","elevation","path","table","minWidth","createData","locationId","lat","long","timestamp","rows","DenseTable","Fragment","getLabelByIndustry","TableContainer","component","Table","aria-label","TableHead","TableRow","TableCell","TableBody","row","key","scope","Upload","Grow","in","mt","container","direction","justify","alignItems","disabled","Skeleton","animation","height","Chart","options","text","left","tooltip","trigger","xAxis","boundaryGap","axisLabel","formatter","idx","moment","format","yAxis","option","notMerge","lazyUpdate","formControl","width","LocationSelection","handleChange","selection","FormControl","InputLabel","htmlFor","Select","native","autoWidth","onChange","placeholder","inputProps","id","WeatherVariableSelection","FormControlLabel","control","Radio","checked","labelPlacement","Options","spacing","event","Divider","Graphs","Analysis","Card","CardContent","Actions","handleClickExport","Magic","Export","GridList","cellHeight","cols","tile","GridListTile","TAB_VALUES","withRouter","selectedTab","indexOf","pathname","Tabs","newValue","indicatorColor","textColor","Tab","icon","faFileUpload","faMagic","faFileExport","flexGrow","menuButton","marginRight","MenuAppBar","useState","auth","anchorEl","setAnchorEl","open","Boolean","handleClose","AppBar","position","Toolbar","IconButton","aria-controls","aria-haspopup","currentTarget","Menu","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","onClose","MenuItem","createBrowserHistory","paddingTop","createMuiTheme","palette","primary","main","App","basename","Container","maxWidth","square","exact","AppContainer","ThemeProvider","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.b82bf85c.chunk.js","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { useHistory } from 'react-router-dom';\nimport Button from '@material-ui/core/Button';\nimport Box from '@material-ui/core/Box';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: '1em'\n  },\n  paper: {}\n}));\n\nfunction Home() {\n  const classes = useStyles();\n  const history = useHistory();\n\n  const handleClick = () => {\n    history.push(\"/upload\");\n  }\n\n  return (\n    <Grid item xs={12} align=\"center\">\n      <Box p={4}>\n        <Typography variant=\"h5\" gutterBottom>\n          Hi there! Thank you for Choosing Weather-stellar 🙂\n        </Typography>\n        <Typography gutterBottom>\n          Let's find out how Weather impacts your business. Click on the link below to get started!\n        </Typography>\n      </Box>\n      <Box pb={4}>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          size=\"large\"\n          className={classes.button}\n          onClick={handleClick}\n        >\n          Get Started\n        </Button>\n      </Box>\n    </Grid>\n  );\n}\n\nexport default Home;","import { data as electricityData } from './electricity.json';\nimport { data as pageviewsData } from './pageviews.json';\nimport { data as restaurantData } from './restaurant.json';\nimport _ from 'lodash';\n\nconst ElectricityService = {\n  getLocationOptions: () => {\n    return _.map(electricityData, ({ location }) => {\n      return {\n        value: location.name,\n        label: _.startCase(_.toLower(location.name))\n      };\n    })\n  },\n  getPredictionData: (location, weatherVariable) => {\n    const { prediction } = getDataByLocation(electricityData, location);\n    const dates = _.map(prediction, ({ ts }) => {\n      return ts;\n    });\n\n    const series = [\n      {\n        name: 'Prediction',\n        type: 'line',\n        data: _.map(prediction, ({ v1 }) => {\n          return v1;\n        })\n      }\n    ];\n\n    if (weatherVariable === 'precipitation') {\n      series.push(\n        {\n          name: 'Precipication (mm)',\n          type: 'line',\n          data: _.map(prediction, ({ v2 }) => {\n            return v2;\n          })\n        }\n      );\n    } else {\n      series.push(\n        {\n          name: 'Temperature (C)',\n          type: 'line',\n          data: _.map(prediction, ({ v3 }) => {\n            return v3;\n          })\n        }\n      );\n    }\n\n    const legend = _.map(series, ({ name }) => { return name; });\n\n    const output = {\n      series,\n      dates,\n      subtext: `Electricity demand forecast for ${_.startCase(_.toLower(location))} (2 weeks)`,\n      title: \"Forecast\",\n      analysis: [],\n      legend,\n    };\n\n    return output;\n  },\n  getPerformanceData: (location, weatherVariable) => {\n    const { performance } = getDataByLocation(electricityData, location);\n\n    const filteredPerformanceData = getFilteredPerformanceData(performance);\n\n    const dates = _.map(filteredPerformanceData, ({ ts }) => {\n      return ts;\n    });\n\n    const series = [\n      {\n        name: 'Actual',\n        type: 'line',\n        data: _.map(filteredPerformanceData, ({ v1 }) => {\n          return v1;\n        })\n      },\n      {\n        name: 'Predicted',\n        type: 'line',\n        data: _.map(filteredPerformanceData, ({ v2 }) => {\n          return v2;\n        })\n      }\n    ];\n\n    const legend = _.map(series, ({ name }) => { return name; });\n\n    const output = {\n      series,\n      dates,\n      subtext: `Actual vs Predicted`,\n      title: \"Performance\",\n      analysis: [],\n      legend,\n    };\n\n    return output;\n  }\n}\n\nconst RestaurantService = {\n  getLocationOptions: () => {\n    return _.map(restaurantData, ({ location }) => {\n      return {\n        value: location.name,\n        label: _.startCase(_.toLower(location.name))\n      };\n    })\n  },\n  getPredictionData: (location, weatherVariable) => {\n    const { prediction } = getDataByLocation(restaurantData, location);\n    const dates = _.map(prediction, ({ ts }) => {\n      return ts;\n    });\n\n    const series = [\n      {\n        name: 'Prediction',\n        type: 'line',\n        data: _.map(prediction, ({ v1 }) => {\n          return v1;\n        })\n      }\n    ];\n\n    if (weatherVariable === 'precipitation') {\n      series.push(\n        {\n          name: 'Precipication (mm)',\n          type: 'line',\n          data: _.map(prediction, ({ v2 }) => {\n            return v2;\n          })\n        }\n      );\n    } else {\n      series.push(\n        {\n          name: 'Temperature (C)',\n          type: 'line',\n          data: _.map(prediction, ({ v3 }) => {\n            return v3;\n          })\n        }\n      );\n    }\n\n    const legend = _.map(series, ({ name }) => { return name; });\n\n    const output = {\n      series,\n      dates,\n      subtext: `Restaurant sales forecast for ${_.startCase(_.toLower(location))} (2 weeks)`,\n      title: \"Forecast\",\n      analysis: [],\n      legend,\n    };\n\n    return output;\n  },\n  getPerformanceData: (location, weatherVariable) => {\n    const { performance } = getDataByLocation(restaurantData, location);\n\n    const filteredPerformanceData = getFilteredPerformanceData(performance);\n\n    const dates = _.map(filteredPerformanceData, ({ ts }) => {\n      return ts;\n    });\n\n    const series = [\n      {\n        name: 'Actual',\n        type: 'line',\n        data: _.map(filteredPerformanceData, ({ v1 }) => {\n          return v1;\n        })\n      },\n      {\n        name: 'Predicted',\n        type: 'line',\n        data: _.map(filteredPerformanceData, ({ v2 }) => {\n          return v2;\n        })\n      }\n    ];\n\n    const legend = _.map(series, ({ name }) => { return name; });\n\n    const output = {\n      series,\n      dates,\n      subtext: `Actual vs Predicted`,\n      title: \"Performance\",\n      analysis: [],\n      legend,\n    };\n\n    return output;\n  }\n}\n\nconst PageviewsService = {\n  getLocationOptions: () => {\n    return _.map(pageviewsData, ({ location }) => {\n      return {\n        value: location.name,\n        label: _.startCase(_.toLower(location.name))\n      };\n    })\n  },\n  getPredictionData: (location, weatherVariable) => {\n    const { prediction } = getDataByLocation(pageviewsData, location);\n    const dates = _.map(prediction, ({ ts }) => {\n      return ts;\n    });\n\n    const series = [\n      {\n        name: 'Prediction',\n        type: 'line',\n        data: _.map(prediction, ({ v1 }) => {\n          return v1;\n        })\n      }\n    ];\n\n    if (weatherVariable === 'precipitation') {\n      series.push(\n        {\n          name: 'Precipication (mm)',\n          type: 'line',\n          data: _.map(prediction, ({ v2 }) => {\n            return v2;\n          })\n        }\n      );\n    } else {\n      series.push(\n        {\n          name: 'Temperature (C)',\n          type: 'line',\n          data: _.map(prediction, ({ v3 }) => {\n            return v3;\n          })\n        }\n      );\n    }\n\n    const legend = _.map(series, ({ name }) => { return name; });\n\n    const output = {\n      series,\n      dates,\n      subtext: `Page view forecast for ${_.startCase(_.toLower(location))} (2 weeks)`,\n      title: \"Forecast\",\n      analysis: [],\n      legend,\n    };\n\n    return output;\n  },\n  getPerformanceData: (location, weatherVariable) => {\n    const { performance } = getDataByLocation(pageviewsData, location);\n\n    const filteredPerformanceData = getFilteredPerformanceData(performance);\n\n    const dates = _.map(filteredPerformanceData, ({ ts }) => {\n      return ts;\n    });\n\n    const series = [\n      {\n        name: 'Actual',\n        type: 'line',\n        data: _.map(filteredPerformanceData, ({ v1 }) => {\n          return v1;\n        })\n      },\n      {\n        name: 'Predicted',\n        type: 'line',\n        data: _.map(filteredPerformanceData, ({ v2 }) => {\n          return v2;\n        })\n      }\n    ];\n\n    const legend = _.map(series, ({ name }) => { return name; });\n\n    const output = {\n      series,\n      dates,\n      subtext: `Actual vs Predicted`,\n      title: \"Performance\",\n      analysis: [],\n      legend,\n    };\n\n    return output;\n  }\n}\n\nfunction getDataByLocation(data, location) {\n  return _.filter(data, item => item.location.name === location)[0];\n}\n\nfunction getFilteredPerformanceData(data) {\n  return _.filter(data, item => _.includes(item.ts, '-02-'));\n}\n\nconst DataService = {\n  electricity: ElectricityService,\n  restaurant: RestaurantService,\n  pageviews: PageviewsService,\n}\n\nexport default DataService;","import DataService from '../../data';\nimport _ from 'lodash';\n\nexport const initialState = {\n  file: {},\n  location: null,\n  locationOptions: [],\n  prediction: {\n    series: [],\n    dates: [],\n    subtext: \"\",\n    legend: [],\n    title: \"Forecast\",\n    analysis: [],\n  },\n  performance: {\n    series: [],\n    dates: [],\n    legend: [],\n    subtext: \"\",\n    title: \"Performance\",\n    analysis: [],\n  },\n  weatherVariable: 'temperature',\n  industry: 'electricity',\n};\n\nexport const reducer = (state, action) => {\n  switch (action.type) {\n    case 'UPLOAD_FILE':\n      const industry = getIndustryByFilename(action.payload.name);\n      console.log({ industry });\n      const locationOptions = DataService[industry].getLocationOptions();\n      return {\n        ...state,\n        file: action.payload,\n        industry,\n        locationOptions,\n        location: locationOptions[0].value,\n        prediction: DataService[industry].getPredictionData(locationOptions[0].value, 'temperature'),\n        performance: DataService[industry].getPerformanceData(locationOptions[0].value, 'temperature'),\n      };\n    case 'SELECT_LOCATION':\n      return {\n        ...state,\n        location: action.payload,\n        prediction: DataService[state.industry].getPredictionData(action.payload, state.weatherVariable),\n        performance: DataService[state.industry].getPerformanceData(action.payload, state.weatherVariable),\n      };\n    case 'SELECT_WEATHER_VARIABLE':\n      return {\n        ...state,\n        weatherVariable: action.payload,\n        prediction: DataService[state.industry].getPredictionData(state.location, action.payload),\n        performance: DataService[state.industry].getPerformanceData(state.location, action.payload),\n      };\n    default:\n      return state;\n  }\n};\n\nfunction getIndustryByFilename(name) {\n  if (_.includes(name, 'restaurant') || _.includes(name, 'sircorp')) {\n    return 'restaurant';\n  }\n  if (_.includes(name, 'pageviews')) {\n    return 'pageviews';\n  }\n  return 'electricity'\n}","import React, { useReducer } from 'react';\nimport { initialState, reducer } from './reducer';\n\nconst MainContext = React.createContext();\n\nfunction MainContextProvider({ children }) {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const value = { state, dispatch };\n\n  return (\n    <MainContext.Provider value={value}>\n      {children}\n    </MainContext.Provider>\n  );\n}\n\nconst MainContextConsumer = MainContext.Consumer;\n\nexport { MainContext, MainContextProvider, MainContextConsumer };","import React, { useContext } from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport { MainContext } from '../../context/main';\n\nfunction DropZone(props) {\n  const { state, dispatch } = useContext(MainContext);\n  const onDrop = async ([file]) => {\n    const reader = new FileReader();\n    reader.onload = function(e) {\n      const contents = e.target.result;\n      console.log(contents);\n    };\n    reader.readAsText(file);\n    dispatch({ type: 'UPLOAD_FILE', payload: file });\n  }\n\n  const { getRootProps, getInputProps } = useDropzone({ onDrop });\n\n  return (\n    <Paper {...getRootProps({className: 'dropzone'})} variant=\"outlined\" elevation={0}>\n      <input {...getInputProps()} />\n      <Box p={3}>\n        <Typography align=\"center\" color=\"textSecondary\">\n          {state.file.path ? state.file.name : \"Drag 'n' drop a file here, or click to select a file.\"}\n        </Typography>\n      </Box>\n    </Paper>\n  );\n}\n\nexport default DropZone;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n});\n\nfunction createData(locationId, lat, long, timestamp) {\n  return { locationId, lat, long, timestamp };\n}\n\nconst rows = [\n  createData('6e54b5b3-34c0-4887-bb42-39379704ec47', 1.321, 1.821, \"2020-02-21\"),\n  createData('6e12d9c3-8c42-41f2-a729-f9697b8df6fb', 1.851, 1.932, \"2020-02-22\"),\n  createData('0118b484-5cee-426e-96bb-a42a334a7d54', 1.132, 0.513, \"2020-02-23\"),\n  createData('977762e3-2868-4740-b7ac-1f747e6eaa6d', 1.974, 1.103, \"2020-02-24\"),\n  createData('6393e810-1a17-43e6-b92a-2b8d8655d3d9', 2.124, 1.994, \"2020-02-25\"),\n];\n\nexport default function DenseTable({ industry }) {\n  const classes = useStyles();\n\n  const getLabelByIndustry = (industry) => {\n    if (industry === 'pageviews') {\n      return 'Number of Page Views';\n    }\n    if (industry === 'restaurant') {\n      return 'Restaurant Sales';\n    }\n    return 'Electricity Consumption';\n  }\n\n  return (\n    <React.Fragment>\n      <Box p={2}>\n        <Typography variant=\"h5\" gutterBottom color=\"primary\">\n          {getLabelByIndustry(industry)}\n        </Typography>\n      </Box>\n      <TableContainer component={Paper}>\n        <Table className={classes.table} size=\"small\" aria-label=\"a dense table\">\n          <TableHead>\n            <TableRow>\n              <TableCell>Location ID</TableCell>\n              <TableCell align=\"right\">Lat</TableCell>\n              <TableCell align=\"right\">Long</TableCell>\n              <TableCell align=\"right\">Date</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {rows.map(row => (\n              <TableRow key={row.locationId}>\n                <TableCell component=\"th\" scope=\"row\">{row.locationId}</TableCell>\n                <TableCell align=\"right\">{row.lat}</TableCell>\n                <TableCell align=\"right\">{row.long}</TableCell>\n                <TableCell align=\"right\">{row.timestamp}</TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </React.Fragment>\n  );\n}","import React, { useContext } from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport DropZone from '../../widgets/dropzone';\nimport DenseTable from '../../widgets/table';\nimport Box from '@material-ui/core/Box';\nimport Grow from '@material-ui/core/Grow';\nimport { MainContext } from '../../context/main';\nimport Button from '@material-ui/core/Button';\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport Grid from '@material-ui/core/Grid';\nimport { useHistory } from 'react-router-dom';\n\nfunction Upload() {\n  const { state } = useContext(MainContext);\n  const history = useHistory();\n\n  const handleClickAnalyze = () => {\n    history.push(\"/magic\");\n  }\n\n  return (\n    <React.Fragment>\n      <Box p={4}>\n        <Typography gutterBottom>\n          Simply upload your data to the platform. The data can include any metric with a timestamp and location attached to it. If you are a visual learner (like us), check out the template below for the data set format we accept :)\n        </Typography>\n      </Box>\n      <DropZone />\n      {state.file.path ? (\n        <React.Fragment>\n          <Grow in={state.file.path}>\n            <Box mt={2}>\n              <DenseTable industry={state.industry} />\n            </Box>\n          </Grow>\n          <Grid\n            container\n            direction=\"row\"\n            justify=\"center\"\n            alignItems=\"center\"\n          >\n            <Box mt={2}>\n              <Button onClick={handleClickAnalyze} variant=\"outlined\" color=\"primary\" disabled={!state.file.path}>\n                Analyze\n              </Button>\n            </Box>\n          </Grid>\n        </React.Fragment>\n      ) : (\n        <React.Fragment>\n          <Skeleton animation=\"pulse\" height={50} />\n        </React.Fragment>\n      )}\n    </React.Fragment>\n  );\n}\n\nexport default Upload;\n","import React from 'react';\nimport ReactEcharts from 'echarts-for-react';\nimport moment from 'moment';\n\n\nfunction Chart({\n  title,\n  subtext,\n  dates,\n  series,\n  legend,\n}) {\n\n  const options = {\n    title: {\n      text: title,\n      subtext: subtext,\n      left: 'left'\n    },\n    tooltip: {\n      trigger: 'axis'\n    },\n    legend: {\n      data: legend\n    },\n    xAxis: {\n      type: 'category',\n      boundaryGap: false,\n      axisLabel: {\n        formatter: (value, idx) => {\n          return idx === 0 ? value : moment(value).format('ll');\n        }\n      },\n      data: dates\n    },\n    yAxis: {\n      type: 'value'\n    },\n    series,\n  };\n\n  return (\n    <ReactEcharts\n      option={options}\n      notMerge={true}\n      lazyUpdate={true}\n      theme={\"default\"}\n    />\n  );\n}\n\nexport default Chart;\n","import React, { useContext } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Radio from '@material-ui/core/Radio';\nimport Grid from '@material-ui/core/Grid';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Box from '@material-ui/core/Box';\nimport Select from '@material-ui/core/Select';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport _ from 'lodash';\nimport { MainContext } from '../../context/main';\nimport Divider from '@material-ui/core/Divider';\n\nconst useStyles = makeStyles({\n  formControl: {\n    width: '100%'\n  }\n})\n\nfunction LocationSelection({ handleChange, selection, options }) {\n  const classes = useStyles();\n\n  return (\n    <FormControl className={classes.formControl}>\n      <InputLabel htmlFor=\"location-native-simple\">Location</InputLabel>\n      <Select\n        native\n        autoWidth={true}\n        value={selection}\n        onChange={handleChange}\n        placeholder=\"Select Location\"\n        inputProps={{\n          name: 'location',\n          id: 'location-native-simple',\n        }}\n      >\n        {_.map(options, ({ value, label }) => {\n          return (\n            <option value={value}>{label}</option>\n          );\n        })}\n      </Select>\n    </FormControl>\n  );\n}\n\nfunction WeatherVariableSelection({ handleChange, selection }) {\n  return (\n    <React.Fragment>\n      <FormControlLabel\n        value=\"temperature\"\n        control={\n          <Radio\n            checked={selection === 'temperature'}\n            onChange={handleChange}\n            value=\"temperature\"\n            color=\"primary\"\n            size=\"small\"\n          />\n        }\n        label=\"Temperature\"\n        labelPlacement=\"top\"\n      />\n      <FormControlLabel\n        value=\"precipitation\"\n        control={\n          <Radio\n            checked={selection === 'precipitation'}\n            onChange={handleChange}\n            value=\"precipitation\"\n            color=\"primary\"\n            size=\"small\"\n          />\n        }\n        label=\"Precipitation\"\n        labelPlacement=\"top\"\n      />\n    </React.Fragment>\n  );\n}\n\nfunction Options({ options }) {\n  const { state, dispatch } = useContext(MainContext);\n\n  const handleChangeLocation = event => {\n    dispatch({ type: 'SELECT_LOCATION', payload: event.target.value });\n  }\n\n  const handleChangeWeatherVariable = event => {\n    dispatch({ type: 'SELECT_WEATHER_VARIABLE', payload: event.target.value });\n  }\n\n  return (\n    <Grid container spacing={2} xs={6}>\n      <Grid item xs={6}>\n        <Box p={1}>\n          <LocationSelection\n            handleChange={handleChangeLocation}\n            selection={state.location}\n            options={options}\n          />\n        </Box>\n      </Grid>\n      <Grid item xs={6}>\n        <Box p={1}>\n          <WeatherVariableSelection\n            handleChange={handleChangeWeatherVariable}\n            selection={state.weatherVariable}\n          />\n        </Box>\n      </Grid>\n      <Divider />\n    </Grid>\n  );\n}\n\nexport default Options;","import React, { useContext } from 'react';\nimport Chart from '../../widgets/chart';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { MainContext } from '../../context/main';\nimport Options from '../../widgets/options';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport DataService from '../../data';\nimport { useHistory } from 'react-router-dom';\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles(theme => ({\n  formControl: {}\n}));\n\nfunction Magic() {\n  const { state } = useContext(MainContext);\n  const history = useHistory();\n\n  const handleClickExport = () => {\n    history.push(\"/export\");\n  }\n\n  return (\n    <Grid item xs={12}>\n      <Grid item align=\"center\" xs={12}>\n        <Box p={2}>\n          <Typography gutterBottom>\n            Analyze, compare and understand how weather is affecting your data. Slice and dice the data, download it for a variety of use cases.\n          </Typography>\n        </Box>\n      </Grid>\n      <Grid item xs={12}>\n        <Box p={1}>\n          <Options options={state.locationOptions}/>\n        </Box>\n      </Grid>\n      <Grid item xs={12}>\n        <Box p={1}>{\n          <Graphs prediction={state.prediction} performance={state.performance} />\n        }\n        </Box>\n      </Grid>\n      <Grid item xs={12}>\n        <Box p={1}>\n          <Analysis />\n        </Box>\n      </Grid>\n      <Grid item xs={12}>\n        <Box p={1}>\n          <Actions handleClickExport={handleClickExport} />\n        </Box>\n      </Grid>\n    </Grid>\n  );\n}\n\nfunction Graphs({ prediction, performance }) {\n  return (\n    <Grid container spacing={2}>\n      <Grid xs={6}>\n        <Box p={2}>\n          <Chart\n            title={prediction.title}\n            subtext={prediction.subtext}\n            series={prediction.series}\n            dates={prediction.dates}\n          />\n        </Box>\n      </Grid>\n      <Grid xs={6}>\n        <Box p={2}>\n          <Chart\n            title={performance.title}\n            subtext={performance.subtext}\n            series={performance.series}\n            dates={performance.dates}\n          />\n        </Box>\n      </Grid>\n    </Grid>\n  );\n}\n\nfunction Analysis() {\n  return (\n    <Grid container spacing={2}>\n      <Grid xs={6}>\n        <Box p={2}>\n          <Card>\n            <CardContent>\n              <Typography color=\"textSecondary\" gutterBottom>\n                What does this mean?\n              </Typography>\n              <Typography variant=\"h5\" component=\"h2\">\n                be\n              </Typography>\n              <Typography color=\"textSecondary\">\n                adjective\n              </Typography>\n              <Typography variant=\"body2\" component=\"p\">\n                well meaning and kindly.\n                <br />\n                {'\"a benevolent smile\"'}\n              </Typography>\n            </CardContent>\n          </Card>\n        </Box>\n      </Grid>\n      <Grid xs={6}>\n        <Box p={2}>\n          <Card>\n            <CardContent>\n              <Typography color=\"textSecondary\" gutterBottom>\n                What does this mean?\n              </Typography>\n              <Typography variant=\"h5\" component=\"h2\">\n                be\n              </Typography>\n              <Typography color=\"textSecondary\">\n                adjective\n              </Typography>\n              <Typography variant=\"body2\" component=\"p\">\n                well meaning and kindly.\n                <br />\n                {'\"a benevolent smile\"'}\n              </Typography>\n            </CardContent>\n          </Card>\n        </Box>\n      </Grid>\n    </Grid>\n  );\n}\n\nfunction Actions({ handleClickExport }) {\n  return (\n    <Grid\n      container\n      direction=\"row\"\n      justify=\"center\"\n      alignItems=\"center\"\n    >\n      <Box mt={2}>\n        <Button onClick={handleClickExport} variant=\"outlined\" color=\"primary\">\n          Export\n        </Button>\n      </Box>\n    </Grid>\n  );\n}\n\nexport default Magic;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { useHistory } from 'react-router-dom';\nimport Button from '@material-ui/core/Button';\nimport Box from '@material-ui/core/Box';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: '1em'\n  },\n  paper: {}\n}));\n\nfunction Export() {\n  const classes = useStyles();\n  const history = useHistory();\n\n  const tileData = [\n    {\n      title: 'PDF',\n    },\n    {\n      title: 'CSV',\n    },\n    {\n      title: 'Excel',\n    },\n    {\n      title: 'Salesforce',\n    },\n    {\n      title: 'Netsuite',\n    },\n    {\n      title: 'Looker',\n    }\n  ]\n\n  return (\n    <React.Fragment>\n      <Grid item xs={12} align=\"center\">\n        <Box p={4}>\n          <Typography variant=\"h5\" gutterBottom>\n            Congrats! You have successfully seen the future 🙂\n          </Typography>\n          <Typography gutterBottom color=\"textSecondary\">\n            Why stop here? We're integrated into several tools in the market.\n          </Typography>\n          <Typography gutterBottom variant=\"body2\" component=\"p\">\n            Choose from a direct PDF, csv or excel download to further analyze and play with the data the way you want, or we can even share your data to a destination of your choice be it any major CRM (Salesforce, Netsuite etc.) or App store (Shopify etc.). You can even visualize the data in your native data visualization tool (eg. Looker). Click on one of the destination icons below to get going.\n          </Typography>\n        </Box>\n      </Grid>\n      <Grid container>\n        <GridList align=\"center\" cellHeight={50} cols={3}>\n          {tileData.map(tile => (\n            <GridListTile key={tile.title} cols={1}>\n              <Button variant=\"outlined\" color=\"primary\">\n                {tile.title}\n              </Button>\n            </GridListTile>\n          ))}\n        </GridList>\n      </Grid>\n    </React.Fragment>\n  );\n}\n\nexport default Export;\n","import React, { useContext } from 'react';\nimport { withRouter, useHistory } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport InfoIcon from '@material-ui/icons/Info';\nimport { MainContext } from '../../context/main';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faFileUpload, faMagic, faFileExport } from '@fortawesome/free-solid-svg-icons';\n\nconst TAB_VALUES = [\n  '/upload',\n  '/magic',\n  '/export'\n];\n\nconst Navigation = ({ location }) => {\n  const history = useHistory();\n  const selectedTab = TAB_VALUES.indexOf(location.pathname);\n  const { state } = useContext(MainContext);\n\n  const handleChange = (event, newValue) => {\n    history.push(TAB_VALUES[newValue]);\n  };\n\n  if (location.pathname !== '/') {\n    return (\n      <Tabs\n        value={selectedTab}\n        onChange={handleChange}\n        variant=\"fullWidth\"\n        indicatorColor=\"primary\"\n        textColor=\"primary\"\n      >\n        <Tab icon={<FontAwesomeIcon icon={faFileUpload} color={'#2980b9'} size=\"3x\"/>} label=\"Upload\" />\n        <Tab icon={<FontAwesomeIcon icon={faMagic} color={'#8e44ad'} size=\"3x\"/>} label=\"Magic\" disabled={!state.file.path} />\n        <Tab icon={<FontAwesomeIcon icon={faFileExport} color={'#d35400'} size=\"3x\"/>} label=\"Export\" disabled={!state.file.path} />\n      </Tabs>\n    );\n  }\n  return '';\n}\n\nexport default withRouter(Navigation);\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n}));\n\nexport default function MenuAppBar() {\n  const classes = useStyles();\n  const [auth, setAuth] = React.useState(true);\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const open = Boolean(anchorEl);\n\n  const handleMenu = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Typography variant=\"h6\" className={classes.title}>\n            Weather-stellar\n          </Typography>\n          {auth && (\n            <div>\n              <IconButton\n                aria-label=\"account of current user\"\n                aria-controls=\"menu-appbar\"\n                aria-haspopup=\"true\"\n                onClick={handleMenu}\n                color=\"inherit\"\n              >\n                <AccountCircle />\n              </IconButton>\n              <Menu\n                id=\"menu-appbar\"\n                anchorEl={anchorEl}\n                anchorOrigin={{\n                  vertical: 'top',\n                  horizontal: 'right',\n                }}\n                keepMounted\n                transformOrigin={{\n                  vertical: 'top',\n                  horizontal: 'right',\n                }}\n                open={open}\n                onClose={handleClose}\n              >\n                <MenuItem onClick={handleClose}>Profile</MenuItem>\n                <MenuItem onClick={handleClose}>My account</MenuItem>\n              </Menu>\n            </div>\n          )}\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}","import 'typeface-roboto';\nimport './app.css';\nimport React from 'react';\nimport { HashRouter, Route } from \"react-router-dom\";\nimport { createBrowserHistory } from 'history';\nimport Home from './pages/home';\nimport Upload from './pages/upload';\nimport Magic from './pages/magic';\nimport Export from './pages/export';\nimport { MainContextProvider } from \"./context/main\";\nimport Navigation from './components/navigation';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Container from '@material-ui/core/Container';\nimport { makeStyles, createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport Bar from './components/bar';\n\nconst history = createBrowserHistory();\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    paddingTop: '2em'\n  },\n  paper: {\n    padding: '1em',\n    height: \"100%\"\n  },\n}));\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#2c3e50',\n    }\n  },\n})\n\nfunction AppContainer() {\n  return (\n    <MainContextProvider>\n      <ThemeProvider theme={theme}>\n        <App/>\n      </ThemeProvider>\n    </MainContextProvider>\n  );\n}\n\nfunction App() {\n  const classes = useStyles();\n\n  return (\n    <HashRouter basename=\"/\" history={history}>\n      <Container className={classes.root} maxWidth=\"lg\">\n        <Grid item xs={12}>\n          <Bar/>\n          <Paper className={classes.paper} square elevation={0}>\n            <Navigation/>\n            <Box mt={2}>\n              <Route exact path=\"/\" component={Home} />\n              <Route exact path=\"/upload\" component={Upload} />\n              <Route exact path=\"/magic\" component={Magic} />\n              <Route exact path=\"/export\" component={Export} />\n            </Box>\n          </Paper>\n        </Grid>\n      </Container>\n    </HashRouter>\n  );\n}\n\nexport default AppContainer;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport AppContainer from './app';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<AppContainer />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}